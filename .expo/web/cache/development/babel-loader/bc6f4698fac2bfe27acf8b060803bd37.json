{"ast":null,"code":"import _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _jsxFileName = \"/Users/jishanambiar/Desktop/c71-firestore-main/App.js\",\n    _this = this;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { createAppContainer } from 'react-navigation';\nimport { createBottomTabNavigator } from 'react-navigation-tabs';\nimport TransactionScreen from \"./screens/BookTransactionScreen\";\nimport SearchScreen from \"./screens/SearchScreen\";\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(AppContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 9\n        }\n      });\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };\nvar TabNavigator = createBottomTabNavigator({\n  Transaction: {\n    screen: TransactionScreen\n  },\n  Search: {\n    screen: SearchScreen\n  }\n}, {\n  defaultNavigationOptions: function defaultNavigationOptions(_ref) {\n    var navigation = _ref.navigation;\n    return {\n      tabBarIcon: function tabBarIcon(_ref2) {\n        _objectDestructuringEmpty(_ref2);\n\n        var routeName = navigation.state.routeName;\n\n        if (routeName === 'Transaction') {\n          return React.createElement(Image, {\n            source: require(\"./assets/book.png\"),\n            style: {\n              width: 40,\n              height: 40\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 13\n            }\n          });\n        } else if (routeName === 'Search') {\n          return React.createElement(Image, {\n            source: require(\"./assets/searchingbook.png\"),\n            style: {\n              width: 40,\n              height: 40\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 13\n            }\n          });\n        }\n      }\n    };\n  }\n});\nvar AppContainer = createAppContainer(TabNavigator);","map":{"version":3,"sources":["/Users/jishanambiar/Desktop/c71-firestore-main/App.js"],"names":["React","createAppContainer","createBottomTabNavigator","TransactionScreen","SearchScreen","App","Component","TabNavigator","Transaction","screen","Search","defaultNavigationOptions","navigation","tabBarIcon","routeName","state","require","width","height","AppContainer"],"mappings":";;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;;AAEA,SAASC,kBAAT,QAAmC,kBAAnC;AACA,SAASC,wBAAT,QAAyC,uBAAzC;AAEA,OAAOC,iBAAP;AACA,OAAOC,YAAP;;IAEqBC,G;;;;;;;;;;;;;WACnB,kBAAQ;AACN,aAEI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ;AAKD;;;;EAP8BL,KAAK,CAACM,S;;SAAlBD,G;AAUrB,IAAIE,YAAY,GAAGL,wBAAwB,CAAC;AAC1CM,EAAAA,WAAW,EAAE;AAAEC,IAAAA,MAAM,EAAEN;AAAV,GAD6B;AAE1CO,EAAAA,MAAM,EAAE;AAAED,IAAAA,MAAM,EAAEL;AAAV;AAFkC,CAAD,EAIzC;AACEO,EAAAA,wBAAwB,EAAE;AAAA,QAAGC,UAAH,QAAGA,UAAH;AAAA,WAAqB;AAC7CC,MAAAA,UAAU,EAAE,2BAAS;AAAA;;AACnB,YAAMC,SAAS,GAAGF,UAAU,CAACG,KAAX,CAAiBD,SAAnC;;AACA,YAAIA,SAAS,KAAK,aAAlB,EAAiC;AAC/B,iBACE,oBAAC,KAAD;AAAO,YAAA,MAAM,EAAEE,OAAO,qBAAtB;AACE,YAAA,KAAK,EAAE;AAAEC,cAAAA,KAAK,EAAE,EAAT;AAAaC,cAAAA,MAAM,EAAE;AAArB,aADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAID,SALD,MAOK,IAAIJ,SAAS,KAAK,QAAlB,EAA4B;AAC/B,iBACE,oBAAC,KAAD;AAAO,YAAA,MAAM,EAAEE,OAAO,8BAAtB;AACE,YAAA,KAAK,EAAE;AAAEC,cAAAA,KAAK,EAAE,EAAT;AAAaC,cAAAA,MAAM,EAAE;AAArB,aADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAID;AACJ;AAhB8C,KAArB;AAAA;AAD5B,CAJyC,CAA3C;AA2BA,IAAMC,YAAY,GAAGlB,kBAAkB,CAACM,YAAD,CAAvC","sourcesContent":["import * as React from 'react';\nimport { Text, View, StyleSheet, TextInput, Image } from 'react-native';\nimport { createAppContainer } from 'react-navigation';\nimport { createBottomTabNavigator } from 'react-navigation-tabs';\n\nimport TransactionScreen from './screens/BookTransactionScreen';\nimport SearchScreen from './screens/SearchScreen';\n\nexport default class App extends React.Component{\n  render(){\n    return(\n     \n        <AppContainer/>\n     \n    )\n  }\n}\n\nvar TabNavigator = createBottomTabNavigator({\n  Transaction: { screen: TransactionScreen },\n  Search: { screen: SearchScreen }\n},\n  {\n    defaultNavigationOptions: ({ navigation }) => ({\n      tabBarIcon: ({ }) => {\n        const routeName = navigation.state.routeName\n        if (routeName === 'Transaction') {\n          return (\n            <Image source={require('./assets/book.png')}\n              style={{ width: 40, height: 40}}/>\n          )\n        }\n\n        else if (routeName === 'Search') {\n          return (\n            <Image source={require('./assets/searchingbook.png')}\n              style={{ width: 40, height: 40}}/>\n          )\n        }\n    }\n  })\n}\n)\n\n\nconst AppContainer = createAppContainer(TabNavigator);\n"]},"metadata":{},"sourceType":"module"}
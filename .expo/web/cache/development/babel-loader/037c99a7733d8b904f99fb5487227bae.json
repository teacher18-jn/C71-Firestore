{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/jishanambiar/Desktop/c71-firestore-main/screens/BookTransactionScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport * as Camera from \"expo-camera\";\nimport { BarCodeScanner } from 'expo-barcode-scanner';\nimport firebase from 'firebase';\nimport db from \"../config\";\n\nvar TransactionScreen = function (_React$Component) {\n  _inherits(TransactionScreen, _React$Component);\n\n  var _super = _createSuper(TransactionScreen);\n\n  function TransactionScreen() {\n    var _this;\n\n    _classCallCheck(this, TransactionScreen);\n\n    _this = _super.call(this);\n\n    _this.getCameraPermissions = function _callee(id) {\n      var _await$Camera$request, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Camera.requestCameraPermissionsAsync());\n\n            case 2:\n              _await$Camera$request = _context.sent;\n              status = _await$Camera$request.status;\n\n              _this.setState({\n                hasCameraPermissions: status === 'granted',\n                buttonState: id,\n                scanned: false\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.handleBarCodeScanned = function _callee2(_ref) {\n      var type, data, buttonState;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              type = _ref.type, data = _ref.data;\n              buttonState = _this.state.buttonState;\n\n              if (buttonState === 'BookId') {\n                _this.setState({\n                  scanned: true,\n                  scannedBookId: data,\n                  buttonState: 'normal'\n                });\n              } else if (buttonState === 'StudentId') {\n                _this.setState({\n                  scanned: true,\n                  scannedStudentId: data,\n                  buttonState: 'normal'\n                });\n              }\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.handleTransaction = function _callee3() {\n      var transactionMessage;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              db.collection('books').doc(_this.state.scannedBookId).get().then(function (doc) {\n                var book = doc.data();\n                console.log(book);\n              });\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      hasCameraPermissions: null,\n      scanned: false,\n      scannedBookId: '',\n      scannedStudentId: '',\n      buttonState: 'normal'\n    };\n    return _this;\n  }\n\n  _createClass(TransactionScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var hasCameraPermissions = this.state.hasCameraPermissions;\n      var scanned = this.state.scanned;\n      var buttonState = this.state.buttonState;\n\n      if (buttonState !== 'normal' && hasCameraPermissions) {\n        return React.createElement(BarCodeScanner, {\n          onBarCodeScanned: scanned ? undefined : this.handleBarCodeScanned,\n          style: StyleSheet.absoluteFillObject,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }\n        });\n      } else if (buttonState === 'normal') {\n        return React.createElement(View, {\n          style: styles.container,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }\n        }, React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/booklogo.jpg\"),\n          style: {\n            width: 200,\n            height: 200\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }\n        }), React.createElement(Text, {\n          style: {\n            textAlign: 'center',\n            fontSize: 30\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }\n        }, \"W.I.L.Y\")), React.createElement(View, {\n          style: styles.inputView,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }\n        }, React.createElement(TextInput, {\n          style: styles.inputBox,\n          placeholder: \"Book ID\",\n          value: this.state.scannedBookId,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }\n        }), React.createElement(TouchableOpacity, {\n          style: styles.scanButton,\n          onPress: function onPress() {\n            _this2.getCameraPermissions('BookId');\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }\n        }, React.createElement(Text, {\n          style: styles.buttonText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }\n        }, \"Scan\"))), React.createElement(View, {\n          style: styles.inputView,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }\n        }, React.createElement(TextInput, {\n          style: styles.inputBox,\n          placeholder: \"Student ID\",\n          value: this.state.scannedStudentId,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 21\n          }\n        }), React.createElement(TouchableOpacity, {\n          style: styles.scanButton,\n          onPress: function onPress() {\n            _this2.getCameraPermissions('StudentId');\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }\n        }, React.createElement(Text, {\n          style: styles.buttonText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }\n        }, \"Scan\"))), React.createElement(TouchableOpacity, {\n          style: styles.submitButton,\n          onPress: function onPress() {\n            return _this2.handleTransaction();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 21\n          }\n        }, React.createElement(Text, {\n          style: styles.submitButtonText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }\n        }, \"Submit\")));\n      }\n    }\n  }]);\n\n  return TransactionScreen;\n}(React.Component);\n\nexport { TransactionScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  displayText: {\n    fontSize: 15,\n    textDecorationLine: 'underline'\n  },\n  scanButton: {\n    backgroundColor: '#2196F3',\n    padding: 10,\n    margin: 10\n  },\n  buttonText: {\n    fontSize: 15,\n    textAlign: 'center',\n    marginTop: 10\n  },\n  inputView: {\n    flexDirection: 'row',\n    margin: 20\n  },\n  inputBox: {\n    width: 200,\n    height: 40,\n    borderWidth: 1.5,\n    borderRightWidth: 0,\n    fontSize: 20\n  },\n  scanButton: {\n    backgroundColor: '#66BB6A',\n    width: 50,\n    borderWidth: 1.5,\n    borderLeftWidth: 0\n  },\n  submitButton: {\n    backgroundColor: '#FBC02D',\n    width: 100,\n    height: 50\n  },\n  submitButtonText: {\n    padding: 10,\n    textAlign: 'center',\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: 'white'\n  }\n});","map":{"version":3,"sources":["/Users/jishanambiar/Desktop/c71-firestore-main/screens/BookTransactionScreen.js"],"names":["React","Camera","BarCodeScanner","firebase","db","TransactionScreen","getCameraPermissions","id","requestCameraPermissionsAsync","status","setState","hasCameraPermissions","buttonState","scanned","handleBarCodeScanned","type","data","state","scannedBookId","scannedStudentId","handleTransaction","collection","doc","get","then","book","console","log","undefined","StyleSheet","absoluteFillObject","styles","container","require","width","height","textAlign","fontSize","inputView","inputBox","scanButton","buttonText","submitButton","submitButtonText","Component","create","flex","justifyContent","alignItems","displayText","textDecorationLine","backgroundColor","padding","margin","marginTop","flexDirection","borderWidth","borderRightWidth","borderLeftWidth","fontWeight","color"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Text, View, StyleSheet, TouchableOpacity, TextInput, Image } from 'react-native';\n//import * as Permissions from 'expo-permissions';\nimport * as Camera from \"expo-camera\"\nimport { BarCodeScanner } from 'expo-barcode-scanner';\nimport firebase from 'firebase';\nimport db from '../config';\n\nexport default class TransactionScreen extends React.Component{\n    constructor(){\n        super();\n        this.state = {\n            hasCameraPermissions: null,\n            scanned: false,\n            scannedBookId: '',\n            scannedStudentId: '',\n            buttonState: 'normal'\n        }\n    }\n\n    getCameraPermissions = async (id) => {\n        const { status } = await Camera.requestCameraPermissionsAsync()\n\n        this.setState({\n            hasCameraPermissions: status === 'granted',\n            buttonState: id,\n            scanned: false\n        })\n    }\n\n    handleBarCodeScanned = async ({ type, data }) => {\n        const { buttonState } = this.state;\n\n        if (buttonState === 'BookId') {\n            this.setState({\n                scanned: true,\n                scannedBookId: data,\n                buttonState: 'normal',\n            })\n        }\n\n        else if (buttonState === 'StudentId') {\n            this.setState({\n                scanned: true,\n                scannedStudentId: data,\n                buttonState: 'normal',\n            })\n        }\n      \n    }\n\n    handleTransaction = async () => {\n        var transactionMessage\n        db.collection('books').doc(this.state.scannedBookId).get()\n            .then((doc) => {\n                var book = doc.data();\n                console.log(book)\n                /*if (book.bookAvailability) {\n                    this.initiateBookIssue();\n                }\n\n                else {\n                    this.initiateBookReturn();\n                }*/\n            })\n    }\n\n    render() {\n        const hasCameraPermissions = this.state.hasCameraPermissions;\n        const scanned = this.state.scanned;\n        const buttonState = this.state.buttonState;\n\n        if (buttonState !== 'normal' && hasCameraPermissions) {\n            return (\n                <BarCodeScanner\n                    onBarCodeScanned={scanned ? undefined : this.handleBarCodeScanned}\n                    style={StyleSheet.absoluteFillObject}/>\n            )\n        }\n\n        else if (buttonState === 'normal') {\n            return (\n            <View style={styles.container}>\n                    \n                    <View>\n                        <Image source={require('../assets/booklogo.jpg')}\n                            style={{ width: 200, height: 200 }} />\n                        <Text style = {{textAlign: 'center', fontSize: 30}}>W.I.L.Y</Text>\n                    </View>\n                \n                <View style = {styles.inputView}>\n                    <TextInput style={styles.inputBox}\n                        placeholder='Book ID' \n                        value={this.state.scannedBookId}\n                        />\n                    \n                        <TouchableOpacity style={styles.scanButton}\n                            onPress={() => {\n                            this.getCameraPermissions('BookId')\n                        }}>\n                        <Text style = {styles.buttonText}>Scan</Text>\n                    </TouchableOpacity>\n                        \n                </View>\n                    \n                <View style = {styles.inputView}>\n                    <TextInput style={styles.inputBox}\n                        placeholder='Student ID' \n                        value={this.state.scannedStudentId}\n                        />\n                    \n                        <TouchableOpacity style={styles.scanButton}\n                        onPress={() => {\n                            this.getCameraPermissions('StudentId')\n                        }}>\n                        <Text style = {styles.buttonText}>Scan</Text>\n                    </TouchableOpacity>\n                        \n                </View>\n                    \n                    <TouchableOpacity style={styles.submitButton}\n                    onPress = {()=> this.handleTransaction()}>\n                        <Text style = {styles.submitButtonText}>Submit</Text>\n                    </TouchableOpacity>\n                \n            </View>\n            )\n        }\n    }\n    \n}\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    displayText:{\n      fontSize: 15,\n      textDecorationLine: 'underline'\n    },\n    scanButton:{\n      backgroundColor: '#2196F3',\n      padding: 10,\n      margin: 10\n    },\n    buttonText:{\n      fontSize: 15,\n      textAlign: 'center',\n      marginTop: 10\n    },\n    inputView:{\n      flexDirection: 'row',\n      margin: 20\n    },\n    inputBox:{\n      width: 200,\n      height: 40,\n      borderWidth: 1.5,\n      borderRightWidth: 0,\n      fontSize: 20\n    },\n    scanButton:{\n      backgroundColor: '#66BB6A',\n      width: 50,\n      borderWidth: 1.5,\n      borderLeftWidth: 0\n    },\n    submitButton: {\n        backgroundColor: '#FBC02D',\n        width: 100,\n        height: 50,\n    },\n    submitButtonText: {\n        padding: 10,\n        textAlign: 'center',\n        fontSize: 20,\n        fontWeight: 'bold',\n        color: 'white',\n    },\n  });"]},"metadata":{},"sourceType":"module"}